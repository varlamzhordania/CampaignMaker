# Generated by Django 4.2.5 on 2023-09-17 05:08

import autoslug.fields
import campaign.models
import campaign.validators
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.PositiveIntegerField(default=1, help_text='format: required, cannot be 0 or negative number', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Total Households')),
                ('status', models.CharField(choices=[('cancel', 'Canceled'), ('wait', 'Waiting for approval'), ('processing', 'Processing'), ('complete', 'Complete')], default='wait', max_length=31, verbose_name='Status')),
                ('date_start', models.DateTimeField(blank=True, help_text='format: not required, daytime that campaign start', null=True, verbose_name='Date Start')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Create')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
                ('admin', models.ForeignKey(blank=True, help_text='format: last admin that changed campaign', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_admin', to=settings.AUTH_USER_MODEL, verbose_name='Last Admin')),
                ('customer', models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='campaign_customer', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaigns',
            },
        ),
        migrations.CreateModel(
            name='CampaignEmailType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max-255 character, name of your Email type', max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(allow_unicode=True, editable=True, populate_from='name', unique=True, verbose_name='Safe URL')),
                ('is_active', models.BooleanField(default=False, verbose_name='Published')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Create')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Email Type',
                'verbose_name_plural': 'Email Types',
            },
        ),
        migrations.CreateModel(
            name='CampaignSMSType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max-255 character, name of your SMS type', max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(allow_unicode=True, editable=True, populate_from='name', unique=True, verbose_name='Safe URL')),
                ('is_active', models.BooleanField(default=False, verbose_name='Published')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Create')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'SMS Type',
                'verbose_name_plural': 'SMS Types',
            },
        ),
        migrations.CreateModel(
            name='CampaignType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max-255 character, name of your campaign', max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(allow_unicode=True, editable=True, populate_from='name', unique=True, verbose_name='Safe URL')),
                ('price', models.DecimalField(decimal_places=2, help_text='format: maximum price 99999999.99', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Price')),
                ('is_active', models.BooleanField(default=False, verbose_name='Published')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Create')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Campaign Type',
                'verbose_name_plural': 'Campaign Types',
            },
        ),
        migrations.CreateModel(
            name='CampaignZip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max-255 character, name of your campaign', max_length=255, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(allow_unicode=True, editable=True, populate_from='name', unique=True, verbose_name='Safe URL')),
                ('code', models.CharField(help_text='format: required, max-16', max_length=16, verbose_name='Code')),
                ('is_active', models.BooleanField(default=False, verbose_name='Published')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Create')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name': 'Campaign Type',
                'verbose_name_plural': 'Campaign Types',
            },
        ),
        migrations.CreateModel(
            name='CampaignSMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='SMS Body')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Create')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
                ('campaign', models.OneToOneField(help_text='format: required, belonging campaign', on_delete=django.db.models.deletion.CASCADE, related_name='campaign_sms', to='campaign.campaign', verbose_name='Campaign')),
                ('type', models.ForeignKey(help_text='format: required, SMS type', on_delete=django.db.models.deletion.PROTECT, related_name='campaignSMS_type', to='campaign.campaignsmstype', verbose_name='Salutation Type')),
            ],
            options={
                'verbose_name': 'CampaignSMS',
                'verbose_name_plural': 'CampaignSMSes',
            },
        ),
        migrations.CreateModel(
            name='CampaignEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(help_text='format: required, max-255 character', max_length=255, verbose_name='Email Subject')),
                ('body', models.TextField(verbose_name='Email Body')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Create')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
                ('campaign', models.OneToOneField(help_text='format: required, belonging campaign', on_delete=django.db.models.deletion.PROTECT, related_name='campaign_email', to='campaign.campaign', verbose_name='Campaign')),
                ('type', models.ForeignKey(help_text='format: required, Email type', on_delete=django.db.models.deletion.PROTECT, related_name='campaignEmail_type', to='campaign.campaignsmstype', verbose_name='Salutation Type')),
            ],
            options={
                'verbose_name': 'CampaignEmail',
                'verbose_name_plural': 'CampaignEmails',
            },
        ),
        migrations.CreateModel(
            name='CampaignAudio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='format: Only .mp3, .m4a and .wav files are allowed.', upload_to=campaign.models.generate_filename, validators=[campaign.validators.validate_file_duration, campaign.validators.validate_file_extension, campaign.validators.validate_file_size], verbose_name='File')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Create')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
                ('campaign', models.OneToOneField(help_text='format: required, belonging campaign', on_delete=django.db.models.deletion.PROTECT, related_name='campaign_audio', to='campaign.campaign', verbose_name='Campaign')),
            ],
            options={
                'verbose_name': 'CampaignAudio',
                'verbose_name_plural': 'CampaignAudios',
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='type',
            field=models.ForeignKey(help_text='format: required', on_delete=django.db.models.deletion.PROTECT, related_name='campaign_type', to='campaign.campaigntype', verbose_name='Campaign Type'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='zips',
            field=models.ManyToManyField(to='campaign.campaignzip', verbose_name='Zips'),
        ),
    ]
